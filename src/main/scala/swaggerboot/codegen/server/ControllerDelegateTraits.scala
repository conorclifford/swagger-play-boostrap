package swaggerboot.codegen.server

import swaggerboot.codegen._
import swaggerboot.swaggerops.Id
import swaggerboot.{ControllerDelegate, MethodDelegate}

object ControllerDelegateTraits {
  val PackageName = "controllers.delegates"

  def generate(delegate: ControllerDelegate)(implicit ids: Map[String, Id]): String = {
    s"""//
       |// This is generated code. Do not edit this file.
       |//
       |
       |package $PackageName
       |
       |import com.google.inject.ImplementedBy
       |
       |@ImplementedBy(classOf[_root_.${delegate.packageName}.${delegate.className}])
       |trait ${delegate.className} {
       |  ${
            delegate.methods.map { method =>
              val requestType = method.method.body.fold("RequestHeader")(_ => "Request[play.api.libs.json.JsValue]")
              s"def ${toScalaName(method.functionName)}(${paramList(method)})(implicit request: play.api.mvc.$requestType): scala.concurrent.Future[play.api.mvc.Result]"
            }.mkString("\n  ")
          }
       |}
     """.stripMargin
  }

  private def paramList(delegate: MethodDelegate)(implicit ids: Map[String, Id]): String = Controller.paramSigs(delegate.method.params)
}
